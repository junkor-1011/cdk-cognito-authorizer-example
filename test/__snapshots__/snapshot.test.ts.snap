// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test TestApp Stack's Snapshot test 1`] = `
{
  "Outputs": {
    "helloApigatewayEndpoint72D9EB4E": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "helloApigatewayD1490B0F",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "poolclientdomainnameParameter": {
      "Default": "/TESTAPPX/test/COGNITO_POOL_CLIENT_DOMAIN_NAME",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AcceptTest7B7FF621": {
      "DependsOn": [
        "AcceptTestServiceRole0D4E0F1C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "243f2f84350951e7b3716bac0de254ffba2ba18a544a9b79a67b3bdd47d44da0.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "stageName": "test",
          },
        },
        "Handler": "index.lambdaHandler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "AcceptTestServiceRole0D4E0F1C",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceptTestServiceRole0D4E0F1C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ColorAuthorizerD6B973DF": {
      "Properties": {
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "ColorAuthorizerLambda324ACEC8",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":apigateway:",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "ColorAuthorizerLambda324ACEC8",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "ColorAuthorizerLambda324ACEC8",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "method.request.header.Authorization",
        "Name": "test-ColorAurhorizer",
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
        "Type": "TOKEN",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "ColorAuthorizerLambda324ACEC8": {
      "DependsOn": [
        "ReadSSMParamLambdaRole2C496AC9",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "ffc0999cf3b8e71ee35b955c38b08839922f8642c3316683dbd34c4f1433d618.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "audience": {
              "Ref": "Poolappclient2D3B8A6A",
            },
            "issuer": {
              "Fn::Join": [
                "",
                [
                  "https://cognito-idp.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/",
                  {
                    "Ref": "PoolD3F588B8",
                  },
                ],
              ],
            },
            "jwksuri": {
              "Fn::Join": [
                "",
                [
                  "https://cognito-idp.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/",
                  {
                    "Ref": "PoolD3F588B8",
                  },
                  "/.well-known/jwks.json",
                ],
              ],
            },
            "stageName": "test",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": {
          "Fn::GetAtt": [
            "ReadSSMParamLambdaRole2C496AC9",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ColorAuthorizerLambdaTestAppStackColorAuthorizer71FDF26FPermissions6414D824": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ColorAuthorizerLambda324ACEC8",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/authorizers/",
              {
                "Ref": "ColorAuthorizerD6B973DF",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeniedTestFA70CDD5": {
      "DependsOn": [
        "DeniedTestServiceRoleB416408F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "dbccf0b62c6aa96f4d2e501c8500c98ad47cef4719d2a98fe1d0f3372c420db3.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "stageName": "test",
          },
        },
        "Handler": "index.lambdaHandler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "DeniedTestServiceRoleB416408F",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeniedTestServiceRoleB416408F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FruitsAuthorizer4E8A27AA": {
      "Properties": {
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "FruitsAuthorizerLambdaAB18D47B",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":apigateway:",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "FruitsAuthorizerLambdaAB18D47B",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "FruitsAuthorizerLambdaAB18D47B",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "method.request.header.Authorization",
        "Name": "test-FruitsAurhorizer",
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
        "Type": "TOKEN",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "FruitsAuthorizerLambdaAB18D47B": {
      "DependsOn": [
        "ReadSSMParamLambdaRole2C496AC9",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "8472999025628dd914f0f2f2778e8f9b69fe79ca2bfbfd6b0ac68de64dac7b9f.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "audience": {
              "Ref": "Poolappclient2D3B8A6A",
            },
            "issuer": {
              "Fn::Join": [
                "",
                [
                  "https://cognito-idp.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/",
                  {
                    "Ref": "PoolD3F588B8",
                  },
                ],
              ],
            },
            "jwksuri": {
              "Fn::Join": [
                "",
                [
                  "https://cognito-idp.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".amazonaws.com/",
                  {
                    "Ref": "PoolD3F588B8",
                  },
                  "/.well-known/jwks.json",
                ],
              ],
            },
            "stageName": "test",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": {
          "Fn::GetAtt": [
            "ReadSSMParamLambdaRole2C496AC9",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FruitsAuthorizerLambdaTestAppStackFruitsAuthorizer4EB4EB77Permissions4DBAA83E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "FruitsAuthorizerLambdaAB18D47B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/authorizers/",
              {
                "Ref": "FruitsAuthorizer4E8A27AA",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Hello4A628BD4": {
      "DependsOn": [
        "iamRoleForLambdaD6E2D9BB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "c8f171ed7607f026bb5c71f5dbab691f4bcbd76db3b951c5c73f4d8a732facd4.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "iamRoleForLambdaD6E2D9BB",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "PoolCognitoDomainC3A3EAD2": {
      "Properties": {
        "Domain": {
          "Ref": "poolclientdomainnameParameter",
        },
        "UserPoolId": {
          "Ref": "PoolD3F588B8",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "PoolD3F588B8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true,
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "LambdaConfig": {
          "PreTokenGeneration": {
            "Fn::GetAtt": [
              "preTokenGenerationLambda1F130400",
              "Arn",
            ],
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "Poolappclient2D3B8A6A": {
      "Properties": {
        "AllowedOAuthFlows": [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "openid",
        ],
        "CallbackURLs": [
          "http://localhost:3000/api/auth/callback/cognito",
        ],
        "ExplicitAuthFlows": [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": true,
        "RefreshTokenValidity": 720,
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "TokenValidityUnits": {
          "RefreshToken": "minutes",
        },
        "UserPoolId": {
          "Ref": "PoolD3F588B8",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "ReadSSMParamLambdaRole2C496AC9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for Lambda reading param from ssm",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMReadOnlyAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "audiencetestA0D945E1": {
      "Properties": {
        "Name": "/TESTAPPX/test/AUDIENCE",
        "Type": "String",
        "Value": {
          "Ref": "Poolappclient2D3B8A6A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "cognitoAuthorizer9878DCCA": {
      "Properties": {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "test-CognitoAurhorizer",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "PoolD3F588B8",
              "Arn",
            ],
          },
        ],
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
        "Type": "COGNITO_USER_POOLS",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "helloApigatewayAccountD0841D91": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "helloApigatewayD1490B0F",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "helloApigatewayCloudWatchRole4D45C3C0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "helloApigatewayCloudWatchRole4D45C3C0": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "helloApigatewayD1490B0F": {
      "Properties": {
        "Name": "testapp-apigateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "helloApigatewayDeploymentCD355D6316b8df9369c1de87f61c8ccce03cbb5a": {
      "DependsOn": [
        "helloApigatewayhelloGET66EA629E",
        "helloApigatewayhello91568F63",
        "helloApigatewaylambdaauthorizertesthelloacceptGET5FC2734D",
        "helloApigatewaylambdaauthorizertesthelloaccept11EFC59F",
        "helloApigatewaylambdaauthorizertesthellodeniedGETDA1B6445",
        "helloApigatewaylambdaauthorizertesthellodenied2026FC11",
        "helloApigatewaylambdaauthorizertestB48C19FB",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "helloApigatewayDeploymentStageprod7A3EC8D8": {
      "DependsOn": [
        "helloApigatewayAccountD0841D91",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "helloApigatewayDeploymentCD355D6316b8df9369c1de87f61c8ccce03cbb5a",
        },
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "helloApigatewayhello91568F63": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "helloApigatewayD1490B0F",
            "RootResourceId",
          ],
        },
        "PathPart": "hello",
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewayhelloGET66EA629E": {
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "cognitoAuthorizer9878DCCA",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "Hello4A628BD4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "helloApigatewayhello91568F63",
        },
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "helloApigatewayhelloGETApiPermissionTestAppStackhelloApigateway472B4703GEThello15154D55": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Hello4A628BD4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/",
              {
                "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
              },
              "/GET/hello",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewayhelloGETApiPermissionTestTestAppStackhelloApigateway472B4703GEThello0AE7E200": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Hello4A628BD4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/test-invoke-stage/GET/hello",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewaylambdaauthorizertestB48C19FB": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "helloApigatewayD1490B0F",
            "RootResourceId",
          ],
        },
        "PathPart": "lambda-authorizer-test",
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewaylambdaauthorizertesthelloaccept11EFC59F": {
      "Properties": {
        "ParentId": {
          "Ref": "helloApigatewaylambdaauthorizertestB48C19FB",
        },
        "PathPart": "hello-accept",
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewaylambdaauthorizertesthelloacceptGET5FC2734D": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "ColorAuthorizerD6B973DF",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AcceptTest7B7FF621",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "helloApigatewaylambdaauthorizertesthelloaccept11EFC59F",
        },
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "helloApigatewaylambdaauthorizertesthelloacceptGETApiPermissionTestAppStackhelloApigateway472B4703GETlambdaauthorizertesthelloaccept3C948C2F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AcceptTest7B7FF621",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/",
              {
                "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
              },
              "/GET/lambda-authorizer-test/hello-accept",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewaylambdaauthorizertesthelloacceptGETApiPermissionTestTestAppStackhelloApigateway472B4703GETlambdaauthorizertesthelloaccept91B13977": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AcceptTest7B7FF621",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/test-invoke-stage/GET/lambda-authorizer-test/hello-accept",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewaylambdaauthorizertesthellodenied2026FC11": {
      "Properties": {
        "ParentId": {
          "Ref": "helloApigatewaylambdaauthorizertestB48C19FB",
        },
        "PathPart": "hello-denied",
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewaylambdaauthorizertesthellodeniedGETApiPermissionTestAppStackhelloApigateway472B4703GETlambdaauthorizertesthellodenied978585D5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DeniedTestFA70CDD5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/",
              {
                "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
              },
              "/GET/lambda-authorizer-test/hello-denied",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewaylambdaauthorizertesthellodeniedGETApiPermissionTestTestAppStackhelloApigateway472B4703GETlambdaauthorizertesthellodeniedF8AEF0BB": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DeniedTestFA70CDD5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/test-invoke-stage/GET/lambda-authorizer-test/hello-denied",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewaylambdaauthorizertesthellodeniedGETDA1B6445": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "FruitsAuthorizer4E8A27AA",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeniedTestFA70CDD5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "helloApigatewaylambdaauthorizertesthellodenied2026FC11",
        },
        "RestApiId": {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "iamRoleForLambdaD6E2D9BB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "hello-lambda-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "issuertestE683BACC": {
      "Properties": {
        "Name": "/TESTAPPX/test/ISSUER",
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "https://cognito-idp.",
              {
                "Ref": "AWS::Region",
              },
              ".amazonaws.com/",
              {
                "Ref": "PoolD3F588B8",
              },
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "jwksuritest5DCB506B": {
      "Properties": {
        "Name": "/TESTAPPX/test/JWKS_URI",
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "https://cognito-idp.",
              {
                "Ref": "AWS::Region",
              },
              ".amazonaws.com/",
              {
                "Ref": "PoolD3F588B8",
              },
              "/.well-known/jwks.json",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "poolclientdomainurltest0E5C5DDA": {
      "Properties": {
        "Name": "/TESTAPPX/test/COGNITO_POOL_CLIENT_DOMAIN_URL",
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "PoolCognitoDomainC3A3EAD2",
              },
              ".auth.",
              {
                "Ref": "AWS::Region",
              },
              ".amazoncognito.com",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "poolclientidtest7855D46C": {
      "Properties": {
        "Name": "/TESTAPPX/test/COGNITO_POOL_CLIENT_ID",
        "Type": "String",
        "Value": {
          "Ref": "Poolappclient2D3B8A6A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "poolidtestB6DFC108": {
      "Properties": {
        "Name": "/TESTAPPX/test/COGNITO_POOL_ID",
        "Type": "String",
        "Value": {
          "Ref": "PoolD3F588B8",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "preTokenGenerationLambda1F130400": {
      "DependsOn": [
        "preTokenGenerationLambdaServiceRole0C3B4FA0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "5202be7fd6381dffe57a9d4b6bcb31b210d96ceb88708b29b247043da00fbc14.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "stageName": "test",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": {
          "Fn::GetAtt": [
            "preTokenGenerationLambdaServiceRole0C3B4FA0",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "preTokenGenerationLambdaPreTokenGenerationCognitoB0148D6A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "preTokenGenerationLambda1F130400",
            "Arn",
          ],
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "PoolD3F588B8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "preTokenGenerationLambdaServiceRole0C3B4FA0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "restapiIdtest1FFC11A9": {
      "Properties": {
        "Name": "/TESTAPPX/test/REST_API_ID",
        "Type": "String",
        "Value": {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "restapiUrltest3D65AE97": {
      "Properties": {
        "Name": "/TESTAPPX/test/REST_API_BASE_URL",
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "helloApigatewayD1490B0F",
              },
              ".execute-api.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
              },
              "/",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
